{"version":3,"file":"0.cd68b5ee300b0c0bba72.hot-update.js","sources":["webpack:///src/pages/Home/index.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Cabecalho from '../../components/Cabecalho'\nimport NavMenu from '../../components/NavMenu'\nimport Dashboard from '../../components/Dashboard'\nimport Widget from '../../components/Widget'\nimport TrendsArea from '../../components/TrendsArea'\nimport Tweet from '../../containers/TweetPadrao'\n\nimport Modal from '../../components/Modal'\nimport PropTypes from 'prop-types'\n\nimport * as TweetsAPI from '../../api/TweetsAPI'\n\nclass Home extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n        novoTweet: '',\n        tweetAtivo: {},\n        tweets: []\n    }\n\n    this.adicionaTweet = this.adicionaTweet.bind(this)\n  }\n\n  componentDidMount() {\n    this.context.store.subscribe(() => {\n        this.setState({\n            tweets: this.context.store.getState().tweets.lista,\n            tweetAtivo: this.context.store.getState().tweets.tweetAtivo\n        })\n    })\n    this.context.store.dispatch(TweetsAPI.carrega())\n  }\n\n  adicionaTweet(event) {\n    event.preventDefault()\n    this.context.store.dispatch(TweetsAPI.adiciona(this.state.novoTweet))\n    this.setState({\n        novoTweet: ''\n    })\n  }\n\n  abreModalParaTweet = (event, IDtweetSelecionado) => {\n    const isTweetFooter = event.target.closest('.tweet__footer')\n\n    \n    if(isTweetFooter) return false\n    \n    \n    const tweetSelecionado = this.state.tweets.find( tweet => tweet._id === IDtweetSelecionado  )\n\n    console.log(tweetSelecionado, this.state)\n    \n    this.context.store.dispatch({ type: 'ADD_TWEET_ATIVO', tweetSelecionado  })\n  }\n\n  fechaModal = (event) => {\n    const isModal = event.target.closest('.widget')\n    if(!isModal) {\n        console.log('Fecha o modal')\n        this.context.store.dispatch({ type: 'REMOVE_TWEET_ATIVO' })\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Cabecalho>\n            <NavMenu usuario=\"@omariosouto\" />\n        </Cabecalho>\n        <div className=\"container\">\n            <Dashboard>\n                <Widget>\n                  <form className=\"novoTweet\" onSubmit={ this.adicionaTweet }>\n                      <div className=\"novoTweet__editorArea\">\n                          <span\n                              className={`\n                                  novoTweet__status\n                                  ${ this.state.novoTweet.length > 140\n                                    ? 'novoTweet__status--invalido' : '' }\n                              `}>\n                              { this.state.novoTweet.length }/140\n                          </span>\n                          <textarea\n                              className=\"novoTweet__editor\"\n                              value={ this.state.novoTweet }\n                              onInput={ (event) => this.setState({ novoTweet: event.target.value }) }\n                              placeholder=\"O que estÃ¡ acontecendo?\">\n                          </textarea>\n                      </div>\n                      <button className=\"novoTweet__envia\"\n                              disabled={ this.state.novoTweet.length > 140 ? true : false }\n                              type=\"submit\">\n                          Tweetar\n                      </button>\n                  </form>\n                </Widget>\n                <Widget>\n                    <TrendsArea />\n                </Widget>\n            </Dashboard>\n            <Dashboard posicao=\"centro\">\n                <Widget>\n                    <div className=\"tweetsArea\">\n                        { this.state.tweets.length === 0 ? 'Nenhum tweet encontrado :(' : '' }\n                        { this.state.tweets.map(\n                            (tweetInfo, index) =>\n                                <Tweet\n                                    key={tweetInfo._id}\n                                    texto={tweetInfo.conteudo}\n                                    handleAbreModalParaTweet={(event) => this.abreModalParaTweet(event,tweetInfo._id)}\n                                    tweetInfo={tweetInfo}/>\n                            )\n                        }\n                    </div>\n                </Widget>\n            </Dashboard>\n        </div>\n\n        <Modal fechaModal={this.fechaModal} isAberto={!!this.state.tweetAtivo._id}>\n            <Widget>\n                <Tweet\n                    key={this.state.tweetAtivo._id}\n                    texto={this.state.tweetAtivo.conteudo || ''}\n                    tweetInModal={true}\n                    tweetInfo={this.state.tweetAtivo}/>\n            </Widget>\n        </Modal>\n\n        { this.context.store.getState().notificacao &&\n            <div className=\"notificacaoMsg\">\n                { this.context.store.getState().notificacao }\n            </div>\n        }\n      </Fragment>\n    );\n  }\n}\n\nHome.contextTypes = {\n    store: PropTypes.object.isRequired\n}\n\nexport default Home;\n\n\n\n// WEBPACK FOOTER //\n// src/pages/Home/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AA8BA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CA;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AAhDA;AACA;AACA;AACA;AAHA;AACA;AAKA;AARA;AASA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AAwBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAMA;AANA;AAAA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AATA;AAgBA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AADA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AA1BA;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AADA;AAHA;AADA;AADA;AA/BA;AAiDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AADA;AADA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAhEA;AAsEA;;;;AA5HA;AACA;AA8HA;AACA;AADA;AACA;AAGA;;;;A","sourceRoot":""}