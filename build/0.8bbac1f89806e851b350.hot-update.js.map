{"version":3,"file":"0.8bbac1f89806e851b350.hot-update.js","sources":["webpack:///src/server/index.js"],"sourcesContent":["// Coisas do Node\nimport express from 'express';\nimport cookieParser from 'cookie-parser'\n\n// Lib responsável por AJAX\nimport 'universal-fetch';\n\n// Helpers para o SSR\nimport { doRedirect,\n        extractInitialData,\n        extractActiveRouteInfoFromRoutes,\n        getCurrentComponent } from './ssr-helpers.js'\n\n// Coisas do React\nimport React from 'react';\nimport { StaticRouter } from 'react-router-dom';\nimport { renderToStaticMarkup, renderToString } from 'react-dom/server';\n\n// Coisas da Aplicação\nimport Html from '../components/Html'\nimport Routes from '../routes';\n\n// Coisas do Redux\nimport { Provider } from 'react-redux'\nimport configuraStore from '../store'\n\n// Coisas do React Loadable (Componentes Assincronos)\nimport { Capture } from 'react-loadable';\nimport { getBundles } from 'react-loadable/webpack';\nimport stats from '../../build/react-loadable.json';\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst server = express();\n\n// Cookies Support\nserver.use(cookieParser())\n\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get('/*', (request, resposta) => {\n    let status = 200\n\n    // 1 - Extrai a rota ativa\n    const activeRouteInfo = extractActiveRouteInfoFromRoutes(request.url, Routes)\n    request.params = activeRouteInfo.params // Repassa os parâmetros do React Router para o `request` do Express\n\n    // 2 - Precisamos garantir que a rota 404 existe na aplicação.\n    if(!activeRouteInfo.route) { \n      resposta.send(\"Você deve criar uma rota que represente a 404 com o path='*'.\")\n      return false;\n    }\n    \n    // 3 - Define um redirect caso necessário\n    if(activeRouteInfo.route.props.render) { \n      doRedirect(activeRouteInfo, resposta.redirect)\n      return false;\n    }\n\n    // 4 - Extrai o componente da rota atual\n    getCurrentComponent(activeRouteInfo.route.props)\n      .then((component) => extractInitialData(component, request))\n      .then(({component, initialData}) => {        \n        // Setup da aplicação no server (obrigatório)\n        let markup = (\n          <StaticRouter context={ initialData } location={request.url}>\n            <Routes />\n          </StaticRouter>\n        )\n        // ./\n\n        // Configuração do Redux (opcional)\n        const storeInicial = configuraStore() // Pega o esqueleto da store do redux\n        const store = configuraStore({\n          ...storeInicial.getState(),\n          ...initialData  \n        }) // Cria a store, somente alterando o dado passado, mas mantendo o esqueleto\n        \n        // Essa alteração deve ser feita, somente por conta do redux estar sendo aplicado no projeto\n        initialData = store.getState()\n\n        markup = (\n          <Provider store={store}>\n            {markup}\n          </Provider>\n        )\n        // ./\n\n        // Configuração do React Loadable (obrigatória)\n        const modules = [];\n        markup = renderToString(\n          <Capture report={moduleName => modules.push(moduleName)}>\n            { markup }\n          </Capture>\n        );\n        const bundles = getBundles(stats, modules);\n        const chunks = bundles.filter(bundle => bundle.file.endsWith('.js'));\n        assets.chunks = chunks \n        // ./\n\n\n\n\n        resposta.status(status).send(\n          `<!doctype html>\n          ${renderToStaticMarkup(\n              <Html assets={assets} markup={markup} initialState={initialData} />\n            )\n          }`\n        );\n      })\n  });\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// src/server/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;;;;A","sourceRoot":""}