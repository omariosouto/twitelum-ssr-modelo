{"version":3,"file":"0.a3e6adde772caa32e338.hot-update.js","sources":["webpack:///src/components/NavMenu/index.js","webpack:///src/routes.js","webpack:///src/server/index.js","webpack:///src/server/ssr-helpers.js","webpack:///external \"react-router-dom\""],"sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './navMenu.css'\n\nclass NavMenu extends Component {\n    render() {\n        return (\n            <nav className=\"navMenu\">\n                <ul className=\"navMenu__lista\">\n                <li className=\"navMenu__item\">\n                    <a className=\"navMenu__link\">\n                        Bem vindo(a): <br />\n                        <strong>{ this.props.usuario }</strong>\n                    </a>\n                </li>\n                <li className=\"navMenu__item\">\n                    <a className=\"navMenu__link\" href=\"\">Página Inicial</a>\n                </li>\n                <li className=\"navMenu__item\">\n                    <a className=\"navMenu__link\">Hashtags</a>\n                </li>\n                <li className=\"navMenu__item\">\n                    <Link to=\"/login\" className=\"navMenu__link\">Logout</Link>\n                </li>\n                </ul>\n            </nav>\n        )\n    }\n}\n\nexport default NavMenu\n\n\n// WEBPACK FOOTER //\n// src/components/NavMenu/index.js","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Páginas\nimport Home from './pages/Home'\nimport LoginPage from './pages/LoginPage'\nimport PerfilPage from './pages/PerfilPage';\n\n// Código da autenticação\nimport { Redirect } from 'react-router-dom'\n\n// import Loadable from 'react-loadable'\n// const Home = Loadable({\n//     loader: () => import('./pages/Home'),\n//     loading: () => null,\n//   });\n\nfunction estaAutenticado() {\n    const navegador = typeof window !== 'undefined';\n    if(navegador) {\n        if(localStorage.getItem('TOKEN')) {\n            return true\n        } else {\n            return false\n        }\n    }\n    return true\n}\n\nclass PrivateRoute extends Component {\n    render() {\n        const props = this.props\n\n        if(estaAutenticado()) {\n            return ( <Route {...props} /> )\n        } else {\n            return ( <Redirect to=\"/login\"/> )\n        }\n    }\n}\n\nconst Roteamento = () => {\n    return (\n        <Switch>\n            <PrivateRoute path=\"/\" component={Home} exact />\n            <Route path=\"/login\" component={LoginPage} />\n            <Route path=\"/usuarios/:login\" component={PerfilPage} />\n            <Route path=\"*\" component={ () => (<div>Página 404</div>) } />\n        </Switch>\n    )\n}\n\nexport default Roteamento\n\n\n// WEBPACK FOOTER //\n// src/routes.js","// Coisas do Node\nimport express from 'express';\nimport cookieParser from 'cookie-parser'\n\n// Lib responsável por AJAX\nimport 'universal-fetch';\n\n// Helpers para o SSR\nimport { doRedirect,\n        extractInitialData,\n        getActiveRouteFromRoutes,\n        getCurrentComponent } from './ssr-helpers.js'\n\n// Coisas do React\nimport React from 'react';\nimport { StaticRouter } from 'react-router-dom';\nimport { renderToStaticMarkup, renderToString } from 'react-dom/server';\n\n// Coisas da Aplicação\nimport Html from '../components/Html'\nimport Routes from '../routes';\n\n// Coisas do Redux\nimport { Provider } from 'react-redux'\nimport configuraStore from '../store'\n\n// Coisas do React Loadable (Componentes Assincronos)\nimport { Capture } from 'react-loadable';\nimport { getBundles } from 'react-loadable/webpack';\nimport stats from '../../build/react-loadable.json';\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst server = express();\n\n// Cookies Support\nserver.use(cookieParser())\n\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get('/*', (request, resposta) => {\n    let status = 200\n\n    // 1 - Extrai a rota ativa\n    const activeRoute = getActiveRouteFromRoutes(request.url, Routes)\n\n    // 2 - Precisamos garantir que a rota 404 existe na aplicação.\n    if(!activeRoute) { \n      resposta.send(\"Você deve criar uma rota que represente a 404 com o path='*'.\")\n      return false;\n    }\n    \n    // 3 - Define um redirect caso necessário\n    if(activeRoute.props.render) { \n      doRedirect(activeRoute, resposta.redirect)\n      return false;\n    }\n\n    // 4 - Extrai o componente\n    getCurrentComponent(activeRoute.props)\n      .then((component) => extractInitialData(component, request))\n      .then(({component, initialData}) => {        \n        // Setup da aplicação no server (obrigatório)\n        let markup = (\n          <StaticRouter context={ initialData } location={request.url}>\n            <Routes />\n          </StaticRouter>\n        )\n        // ./\n\n        // Configuração do Redux (opcional)\n        const store = configuraStore(initialData)\n        markup = (\n          <Provider store={store}>\n            {markup}\n            </Provider>\n        )\n        // ./\n\n        // Configuração do React Loadable (obrigatória)\n        const modules = [];\n        markup = renderToString(\n          <Capture report={moduleName => modules.push(moduleName)}>\n            { markup }\n          </Capture>\n        );\n        const bundles = getBundles(stats, modules);\n        const chunks = bundles.filter(bundle => bundle.file.endsWith('.js'));\n        assets.chunks = chunks \n        // ./\n\n\n\n\n        resposta.status(status).send(\n          `<!doctype html>\n          ${renderToStaticMarkup(\n              <Html assets={assets} markup={markup} initialState={initialData} />\n            )\n          }`\n        );\n      })\n  });\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// src/server/index.js","import Routes from '../routes'\n\nexport function getActiveRouteFromRoutes(url, router) {\n  const routesArray = Routes().props.children.map( route => route )\n  let activeRoute = routesArray.find( route => route.props.path.match(new RegExp(`${url}`)) ? route : false )\n  \n  if(!activeRoute) { // Set 404 Route\n      activeRoute = routesArray.find( route => route.props.path.match(/\\*/) ? route : false )\n  }\n\n  return activeRoute\n}\n\nexport function doRedirect(activeRoute, redirect) {\n  if(activeRoute.props.render().props.to) {\n      redirect(activeRoute.props.render().props.to)\n  }\n}\n\nexport function getCurrentComponent({ component }) {\n\n  if(component.preload) { // Load Async\n    return component.preload()\n                    .then((component) => {\n                      return component.default\n                    })\n  } else {\n    return new Promise((resolve) => { // Load Sync\n      resolve(component)\n    })\n  }\n}\n\nexport async function extractInitialData(component, request) {\n  let initialData = {};\n\n  if(component.getInitialData) {\n    initialData = await component.getInitialData(request)\n  }\n\n  return {\n    component,\n    initialData\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/server/ssr-helpers.js","module.exports = require(\"react-router-dom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router-dom\"\n// module id = react-router-dom\n// module chunks = 0"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAbA;AADA;AAoBA;;;;AAvBA;AACA;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;AATA;AACA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACzGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAIA;AACA;AALA;AAAA;AAQA;AACA;AAFA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;;;;;;;ACjCA;;;;A","sourceRoot":""}