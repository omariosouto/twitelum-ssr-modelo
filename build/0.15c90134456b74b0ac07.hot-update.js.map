{"version":3,"file":"0.15c90134456b74b0ac07.hot-update.js","sources":["webpack:///src/containers/TweetPadrao.js","webpack:///src/server/index.js","webpack:///src/store.js","webpack:///external \"react-redux\""],"sourcesContent":["import { connect } from 'react-redux'\nimport * as TweetsAPI from '../api/TweetsAPI'\nimport Tweet from '../components/Tweet'\n\n// Ajustando o Container Component\nconst mapStateToProps = (state) => {\n    return {}\n}\n\nconst mapDispatchToProps = (dispatch, propsRecebidas) =>{\n    return {\n        removeHandler: () => {\n            dispatch(TweetsAPI.remove(propsRecebidas.tweetInfo._id))\n        },\n        likeHandler: () => {\n            dispatch(TweetsAPI.like(propsRecebidas.tweetInfo._id))\n        }    \n    }\n}\n\nconst TweetPadraoContainer = connect(mapStateToProps, mapDispatchToProps)(Tweet)\n\n\nexport default TweetPadraoContainer\n\n\n// WEBPACK FOOTER //\n// src/containers/TweetPadrao.js","// Coisas do Node\nimport express from 'express';\nimport cookieParser from 'cookie-parser'\n\n// Lib responsável por AJAX\nimport 'universal-fetch';\n\n// Helpers para o SSR\nimport { doRedirect,\n        extractInitialData,\n        getActiveRouteFromRoutes,\n        getCurrentComponent } from './ssr-helpers.js'\n\n// Coisas do React\nimport React from 'react';\nimport { StaticRouter } from 'react-router-dom';\nimport { renderToStaticMarkup, renderToString } from 'react-dom/server';\n\n// Coisas da Aplicação\nimport Html from '../components/Html'\nimport Routes from '../routes';\n\n// Coisas do Redux\nimport { Provider } from 'react-redux'\nimport configuraStore from '../store'\n\n// Coisas do React Loadable (Componentes Assincronos)\nimport { Capture } from 'react-loadable';\nimport { getBundles } from 'react-loadable/webpack';\nimport stats from '../../build/react-loadable.json';\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst server = express();\n\n// Cookies Support\nserver.use(cookieParser())\n\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get('/*', (request, resposta) => {\n    let status = 200\n\n    // 1 - Extrai a rota ativa\n    const activeRoute = getActiveRouteFromRoutes(request.url, Routes)\n\n    // 2 - Precisamos garantir que a rota 404 existe na aplicação.\n    if(!activeRoute) { \n      resposta.send(\"Você deve criar uma rota que represente a 404 com o path='*'.\")\n      return false;\n    }\n    \n    // 3 - Define um redirect caso necessário\n    if(activeRoute.props.render) { \n      doRedirect(activeRoute, resposta.redirect)\n      return false;\n    }\n\n    // 4 - Extrai o componente\n    getCurrentComponent(activeRoute.props)\n      .then((component) => extractInitialData(component, request))\n      .then(({component, initialData}) => {        \n        // Setup da aplicação no server (obrigatório)\n        let markup = (\n          <StaticRouter context={ initialData } location={request.url}>\n            <Routes />\n          </StaticRouter>\n        )\n        // ./\n\n        // // Configuração do Redux (opcional)\n        // const storeInicial = configuraStore() // Pega o esqueleto da store do redux\n        // const store = configuraStore({\n        //   ...storeInicial.getState(),\n        //   ...initialData  \n        // }) // Cria a store, somente alterando o dado passado, mas mantendo o esqueleto\n        \n        // // Essa alteração deve ser feita, somente por conta do redux estar sendo aplicado no projeto\n        // initialData = store.getState()\n\n        // markup = (\n        //   <Provider store={store}>\n        //     {markup}\n        //   </Provider>\n        // )\n        // // ./\n\n        // Configuração do React Loadable (obrigatória)\n        const modules = [];\n        markup = renderToString(\n          <Capture report={moduleName => modules.push(moduleName)}>\n            { markup }\n          </Capture>\n        );\n        const bundles = getBundles(stats, modules);\n        const chunks = bundles.filter(bundle => bundle.file.endsWith('.js'));\n        assets.chunks = chunks \n        // ./\n\n\n\n\n        resposta.status(status).send(\n          `<!doctype html>\n          ${renderToStaticMarkup(\n              <Html assets={assets} markup={markup} initialState={initialData} />\n            )\n          }`\n        );\n      })\n  });\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// src/server/index.js","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\n\nfunction tweetsReducer(state = { lista: [], tweetAtivo: {} }, action = {}) {\n    if(action.type === 'CARREGA_TWEETS') {\n        state.lista = action.tweets\n    }\n\n    if(action.type === 'ADICIONA_TWEET') {\n        state.lista = [action.novoTweet, ...state.lista]\n    }\n\n    if(action.type === 'REMOVE_TWEET') {\n        const listaDeTweetsAtualizada = state.lista.filter( (tweet) => tweet._id !== action.idTweetQueVaiSerRemovido )\n        state.lista = listaDeTweetsAtualizada\n    }\n    \n    if(action.type === 'LIKE') {\n        const listaDeTweetsAtualizada = state.lista.filter((tweet) => {\n            if(tweet._id === action.idTweetLikeado) {\n                const { likeado, totalLikes } = tweet\n\n                if(tweet.likeado) {\n                    tweet.likes = tweet.likes.filter( (like) => like.usuario.login !== action.liker )\n                } else {\n                    tweet.likes = [{ usuario: { login: action.liker } }, ...tweet.likes]\n                }\n\n                tweet.likeado = !likeado\n                tweet.totalLikes = likeado ? totalLikes - 1 : totalLikes + 1\n            }\n            return tweet\n        })\n\n        const tweetAtivoAtualizado = listaDeTweetsAtualizada\n                                        .find((tweet) => tweet._id === state.tweetAtivo._id)\n\n        return {\n            tweetAtivo: { ...tweetAtivoAtualizado } || {},\n            lista: listaDeTweetsAtualizada\n        }\n    }\n\n\n    if(action.type === 'REMOVE_TWEET_ATIVO') {\n        state.tweetAtivo = {}\n        // return Object.assign({}, state, {\n        //     tweetAtivo: {}\n        // })\n    }\n\n    if(action.type === 'ADD_TWEET_ATIVO') {\n        state.tweetAtivo = action.tweetSelecionado\n    }\n\n    return state\n}\n\nfunction notificacaoReducer(state = '', action = {}) {\n    if(action.type === 'ADD_NOTIFICACAO') {\n        state = action.notificacao\n    }\n    if(action.type === 'REMOVE_NOTIFICACAO') {\n        state = ''\n    }\n    return state\n}\n\nfunction usuarioReducer(state = {}, action = {}) {\n    return state\n}\n\nconst configuraStore = (preloadedState) => {\n    return createStore(\n        combineReducers({\n                tweets: tweetsReducer,\n                notificacao: notificacaoReducer,\n                usuario: usuarioReducer\n        }),\n        preloadedState,\n        applyMiddleware(\n            thunk\n        )\n    )\n}\n// window.store = store\nexport default configuraStore\n\n\n// WEBPACK FOOTER //\n// src/store.js","module.exports = require(\"react-redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-redux\"\n// module id = react-redux\n// module chunks = 0"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjHA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAUA;AACA;AACA;;;;;;;ACtFA;;;;A","sourceRoot":""}